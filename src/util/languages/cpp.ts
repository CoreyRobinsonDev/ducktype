const cpp = [
    "#include <iostream>\n\nint main() {\n\tstd::cout << \"Hello, World!\" << std::endl;\n\treturn 0;\n}",
    "int x = 5;",
    "int sum = add(3, 5);",
    "int my_array[] = {1, 2, 3, 4, 5};",
    "std::string my_string = \"Hello, World!\";",
    "int x = 5;\nint y = 10;\nint sum = x + y;",
    "if (condition) {\n\t// do something\n} else {\n\t// do something else\n}",
    "for (int i = 0; i < 5; i++) {\n\tstd::cout << i << std::endl;\n}",
    "int x = 5;\nwhile (x > 0) {\n\tstd::cout << x << std::endl;\n\tx--;\n}",
    "try {\n\t// code that may throw an exception\n}\ncatch (const std::exception& e) {\n\t// handle the exception\n}",
    "#include <vector>",
    "#include <fstream>",
    "std::vector<int> my_vector;",
    "int max = std::max(3, 7);",
    "int factorial = fact(5);",
    "std::vector<std::string> names = {\"John\", \"Jane\", \"Joe\"};",
    "std::vector<int> my_vector;",
    "int numbers[] = {1, 2, 3, 4, 5};\nint sum = std::accumulate(std::begin(numbers), std::end(numbers), 0);",
    "int matrix[2][2] = {{1, 2}, {3, 4}};",
    "std::string json = \"{\"name\": \"John\", \"age\": 30}\";",
    "#include <json/json.h>",
    "int num = 5;\nstd::string str = std::to_string(num);",
    "std::string my_string = \"Hello, World!\";\nsize_t pos = my_string.find(\"World\");",
    "std::string my_string = \"Hello, World!\";\nstd::replace(my_string.begin(), my_string.end(), 'World', 'C++');",
    "std::string my_string = \"  Hello, World!  \";\nstd::string trimmed_string = my_string;\ntrimmed_string.erase(0, trimmed_string.find_first_not_of(' '));\ntrimmed_string.erase(trimmed_string.find_last_not_of(' ') + 1);",
    "std::string my_string = \"Hello, World!\";\nstd::stringstream ss(my_string);\nstd::string token;\nwhile (std::getline(ss, token, ',')) {\n\t// process token\n}",
    "std::string my_string = \"Hello, World!\";\nstd::stringstream ss(my_string);\nstd::string token;\nwhile (ss >> token) {\n\t// process token\n}",
    "std::string my_string = \"Hello, World!\";\nstd::reverse(my_string.begin(), my_string.end());",
    "std::string str1 = \"Hello\";\nstd::string str2 = \"World!\";\nstd::string concatenated_string = str1 + \" \" + str2;",
    "std::string my_string = \"Hello, World!\";\nconst char* char_array = my_string.c_str();",
    "std::string my_string = \"Hello, World!\";\nint length = my_string.size();"
]

export default cpp;
